// TODO: go through and fix rules
service cloud.firestore {
  match /databases/{database}/documents {

    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function isModerator() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isModerator == true;
    }

    function isUser(uid) {
    	return request.auth.uid == uid;
    }

    function isPublished() {
    	return resource.data.published == true;
    }

    // anybody can read the photos but only admin can write
    match /photos/{photoId} {
      allow read: if isPublished() || isModerator();
			allow create: if true;
      allow update: if isModerator();
      allow write: if isAdmin();
    }

    // anybody can create a feedback but only login user can update
    // only moderator or admin can read and update the feedback
    match /feedbacks/{feedback} {
      allow create: if true;
      allow read: if isModerator() || isAdmin();
      allow update: if isModerator() || isAdmin();
    }

    // data written by admin
    match /users/{uid} {
      allow read: if isAdmin() || isUser(uid);
      allow create: if isAdmin() || (isUser(uid) && request.resource.data.keys().hasOnly(['missions']));
      allow write: if isAdmin() || (isUser(uid) && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['missions']));
    }

    // Collection with system data. The Doc stats contains statistics.
    match /sys/stats {
      allow read: if true;
    }

    // some extra config
    match /sys/config {
      allow read: if true;
    }
    
    // data written by admin
    match /missions/{missionId} {

      function isMissionOwner() {
        return get(/databases/$(database)/documents/missions/$(missionId)).data.ownerUserId == request.auth.uid;
      }

      function isPrivateMission() {
        return get(/databases/$(database)/documents/missions/$(missionId)).data.isPrivate == true;
      }

      allow create: if true;
      allow read: if true;
      // Workaround as true because people need to be able to add themselvse to public missions
      // and add themselves as pending members to private missions.
      allow write: if true;
    }

    match /categories {
      allow read: if true;
    }
    
    match /categories/{categoryId} {
      allow read: if true;
      allow write: if isModerator() || isAdmin();
    }

    match /brands {
      allow read: if true;
    }

    match /brands/{brandId} {
      allow read: if true;
      allow write: if isModerator() || isAdmin();
    }
  }
}
